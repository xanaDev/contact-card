{"version":3,"sources":["components/TrustIndicator.tsx","components/ContactCard.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TrustIndicator","props","Box","className","cx","CircularProgress","variant","value","trust","size","thickness","top","left","bottom","right","position","display","alignItems","justifyContent","Badge","classes","root","badge","badgeContent","Avatar","alt","src","avatar","useStyles","makeStyles","overflow","borderRadius","ContactCard","user","styles","Card","CardContent","profileImageUrl","Typography","fullName","IconButton","Add","CardActions","App","userId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAwCeA,MA5Bf,SAAwBC,GACtB,OACE,eAACC,EAAA,EAAD,CAAKC,UAAWC,YAAG,mBAAnB,UACE,cAACC,EAAA,EAAD,CACEF,UAAWC,YAAG,aACdE,QAAQ,cACRC,MAAON,EAAMO,MACbC,KAAM,GACNC,UAAW,IAEb,eAACR,EAAA,EAAD,CACES,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,MAAO,EACPC,SAAS,WACTC,QAAQ,OACRC,WAAW,SACXC,eAAe,SARjB,UASE,cAACC,EAAA,EAAD,CACEC,QAAS,CAAEC,KAAMjB,YAAG,mBAAoBkB,MAAOlB,YAAG,UAClDmB,aAActB,EAAMO,QACtB,cAACgB,EAAA,EAAD,CAAQrB,UAAWC,YAAG,UAAWqB,IAAI,UAAUC,IAAKzB,EAAM0B,gB,gBCX5DC,EAAYC,YAAW,CAC3BR,KAAM,CACJS,SAAU,UACVC,aAAc,KA2BHC,MAvBf,YAA2C,IAApBC,EAAmB,EAAnBA,KACfC,EAASN,IACf,OACE,cAAC1B,EAAA,EAAD,UACE,eAACiC,EAAA,EAAD,CAAMhC,UAAWC,YAAG,QAASgB,QAAS,CAAEC,KAAMa,EAAOb,MAArD,UACE,eAACe,EAAA,EAAD,CAAajC,UAAWC,YAAG,aAA3B,UACE,cAAC,EAAD,CAAgBuB,OAAQM,EAAKI,gBAAiB7B,MAAO,KACrD,eAACN,EAAA,EAAD,CAAKC,UAAWC,YAAG,mBAAnB,UACE,cAACkC,EAAA,EAAD,CAAYnC,UAAWC,YAAG,yBAA1B,SAAqD6B,EAAKM,WAC1D,cAACD,EAAA,EAAD,CAAYnC,UAAWC,YAAG,yBAA1B,oCAEF,cAACoC,EAAA,EAAD,CAAYrC,UAAWC,YAAG,kBAA1B,SACE,cAACqC,EAAA,EAAD,SAGJ,eAACC,EAAA,EAAD,CAAavC,UAAWC,YAAG,UAA3B,qCACuB,cAACkC,EAAA,EAAD,CAAYnC,UAAWC,YAAG,eAA1B,kCCtBhBuC,MApBf,WASE,OACE,sBAAKxC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,uBAEA,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAa8B,KAZN,CACXW,OAAQ,GACRL,SAAU,cACVF,gBAAiB,mDACjB7B,MAAO,YCIIqC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.acca53ce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport cx from \"clsx\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Avatar, Badge } from \"@material-ui/core\";\r\nimport \"./TrustIndicator.scss\";\r\n\r\ninterface TrustIndicatorProps {\r\n  avatar: string;\r\n  trust: number;\r\n}\r\n\r\nfunction TrustIndicator(props: TrustIndicatorProps) {\r\n  return (\r\n    <Box className={cx(\"trust-container\")}>\r\n      <CircularProgress\r\n        className={cx(\"indicator\")}\r\n        variant=\"determinate\"\r\n        value={props.trust}\r\n        size={93}\r\n        thickness={3}\r\n      />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\">\r\n        <Badge\r\n          classes={{ root: cx(\"badge-container\"), badge: cx(\"badge\") }}\r\n          badgeContent={props.trust}></Badge>\r\n        <Avatar className={cx(\"avatar\")} alt=\"contact\" src={props.avatar}></Avatar>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default TrustIndicator;\r\n","import React from \"react\";\r\nimport cx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\nimport TrustIndicator from \"./TrustIndicator\";\r\nimport \"./ContactCard.scss\";\r\nimport { Add } from \"@material-ui/icons\";\r\n\r\ninterface UserProps {\r\n  user: {\r\n    userId: number;\r\n    fullName: string;\r\n    profileImageUrl: string;\r\n    trust: number;\r\n  };\r\n  [rest: string]: any;\r\n}\r\n\r\n// to override the card root element styles\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    overflow: \"visible\",\r\n    borderRadius: 8\r\n  }\r\n});\r\n\r\nfunction ContactCard({ user }: UserProps) {\r\n  const styles = useStyles();\r\n  return (\r\n    <Box>\r\n      <Card className={cx(\"card\")} classes={{ root: styles.root }}>\r\n        <CardContent className={cx(\"card-body\")}>\r\n          <TrustIndicator avatar={user.profileImageUrl} trust={75}></TrustIndicator>\r\n          <Box className={cx(\"contact-details\")}>\r\n            <Typography className={cx(\"contact-details__name\")}>{user.fullName}</Typography>\r\n            <Typography className={cx(\"contact-details__role\")}>nessuna connessione</Typography>\r\n          </Box>\r\n          <IconButton className={cx(\"call-to-action\")}>\r\n            <Add></Add>\r\n          </IconButton>\r\n        </CardContent>\r\n        <CardActions className={cx(\"footer\")}>\r\n          Sta gi√† condividendo <Typography className={cx(\"footer-link\")}>Disney Plus</Typography>\r\n        </CardActions>\r\n      </Card>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ContactCard;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport ContactCard from \"./components/ContactCard\";\n\nfunction App() {\n  // test user\n  const john = {\n    userId: 12,\n    fullName: \"Gina Snelly\",\n    profileImageUrl: \"https://randomuser.me/api/portraits/women/55.jpg\",\n    trust: 75\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Welcome !</header>\n\n      <div className=\"container\">\n        <ContactCard user={john}></ContactCard>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}